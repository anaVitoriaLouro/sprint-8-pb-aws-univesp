service: vision
frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.9

resources:
  Resources:
    MyS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: sprint-8-vision
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256
        Tags:
          - Key: Name
            Value: MyS3Bucket

    MyLambdaFunctionRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: MyLambdaFunctionRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service: lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: S3AccessPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - s3:GetObject
                  Resource: 
                    - Fn::Join:
                        - ''
                        - - 'arn:aws:s3:::'
                          - Ref: MyS3Bucket
                          - '/*'
          - PolicyName: RekognitionAccessPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - rekognition:DetectLabels
                    - rekognition:DetectFaces  # New statement for DetectFaces
                  Resource: "*"  # Update with the appropriate resource if needed
          - PolicyName: ApiGatewayPostAccessPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - execute-api:Invoke
                  Resource: "*"

functions:
  health:
    handler: handler.health
    events:
      - httpApi:
          path: /
          method: get
  v1Description:
    handler: handler.v1_description
    events:
      - httpApi:
          path: /v1
          method: get
  v2Description:
    handler: handler.v2_description
    events:
      - httpApi:
          path: /v2
          method: get
  v1LabelFunction:
    handler: handler.v1Label
    events:
      - httpApi:
          path: /v1/vision
          method: post
    role: MyLambdaFunctionRole
  v2EmotionFunction:
    handler: handler.v2Emotion
    events:
      - httpApi:
          path: /v2/vision
          method: post
    role: MyLambdaFunctionRole